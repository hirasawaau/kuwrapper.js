name: Release
on:
  push:
    branches:
      - 'main'
jobs:
  cache-and-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
    lint:
      runs-on: ubuntu-20.04

      steps:
        - uses: actions/checkout@v2
        - name: Install Module
          run: pnpm install
        - name: Lint
          run: pnpm run lint
    test:
      runs-on: ubuntu-20.04

      steps:
        - uses: actions/checkout@v2
        - name: Install Module
          run: pnpm install
        - name: 'Test'
          run: pnpm run test:cov

    release:
      needs:
        - 'lint'
        - 'test'
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            persist-credentials: false
        - uses: actions/setup-node@v1
          with:
            node-version: '16.x'
        - run: pnpm install
        - run: pnpm run build
        - run: pnpm run semantic-release
          env:
            GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
